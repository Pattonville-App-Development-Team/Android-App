apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

def hasKeystore = file('psd.keystore.properties').exists()
def keystoreProperties = new Properties()
if (hasKeystore)
    keystoreProperties.load(file('psd.keystore.properties').newInputStream())
else
    println 'Keystore properties file missing! An unsigned release build will be generated.'

/*
 * Copyright (C) 2017 - 2018 Mitchell Skaggs, Keturah Gadson, Ethan Holtgrieve, Nathan Skelton, Pattonville School District
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//Disable ErrorProne checks for generated code (Dagger 2, Room, etc.)
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-XepDisableWarningsInGeneratedCode']
}

android {
    if (hasKeystore)
        signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    compileSdkVersion 27
    defaultConfig {
        applicationId "org.pattonvillecs.pattonvilleapp"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 23
        versionName "1.4.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        setProperty("archivesBaseName", "pattonvilleapp-v$versionName")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        //Needed to run instrumentation tests on API 19
        testInstrumentationRunnerArguments = [
                package: 'org.pattonvillecs.pattonvilleapp'
        ]

    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-test.pro'
            if (hasKeystore)
                signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled true
            useProguard true // Required for 'play-services-base:11.8.0' See: https://stackoverflow.com/q/47893266/9073728
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-test.pro'
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES*'
        exclude 'META-INF/LICENSE*'
        exclude 'META-INF/NOTICE*'
        exclude 'META-INF/README*'
        exclude 'META-INF/CHANGES*'
        exclude 'zoneinfo*/**'
    }
}
kotlin {
    experimental {
        coroutines 'enable'
    }
}

configurations.all {
    // Already included in Android
    exclude group: 'stax', module: 'stax-api'
    exclude group: 'stax', module: 'stax'
    exclude group: 'xpp3', module: 'xpp3'
}

dependencies {
    //Fixed errorprone version
    errorprone 'com.google.errorprone:error_prone_core:2.2.0'

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //Android Support Libraries
    implementation "com.android.support:support-annotations:$support_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.takisoft.fix:preference-v7:$support_version.0"

    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta4'

    //Anko
    implementation "org.jetbrains.anko:anko:$anko_version"

    //Firebase
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation "com.google.firebase:firebase-messaging:$firebase_version"
    implementation "com.google.firebase:firebase-perf:$firebase_version"
    implementation "com.crashlytics.sdk.android:crashlytics:2.9.0"

    //Android Architecture Components
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.paging:runtime:1.0.0-alpha4-1"
    kapt "android.arch.persistence.room:compiler:$room_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    //Dagger 2
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Calendar view
    implementation 'com.prolificinteractive:material-calendarview:1.4.3'
    //Alternative
    implementation 'com.applandeo:material-calendar-view:1.4.0'

    //Home carousel
    implementation 'com.synnapps:carouselview:0.1.4'

    //Network image download + cache
    implementation 'com.squareup.picasso:picasso:3.0.0-SNAPSHOT'

    //RecyclerView improvements
    implementation 'eu.davidea:flexible-adapter:5.0.0-SNAPSHOT'
    implementation 'eu.davidea:flexible-adapter-livedata:1.0.0-b2'
    implementation 'eu.davidea:flexible-adapter-ui:1.0.0-b2'

    //Java 8 streams
    implementation 'com.annimon:stream:1.1.9'

    //Collections, utilities
    implementation 'com.google.guava:guava:24.0-android'

    //Network
    implementation 'com.android.volley:volley:1.1.0'
    //Better network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-guava:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofit_version"
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'

    //XML parsing
    implementation 'org.simpleframework:simple-xml:2.7.1'
    implementation 'com.github.magneticflux:kotlin-simplexml-rss:1.1.1', {
        exclude group: 'org.threeten', module: 'threetenbp'
    }

    //All for iCal4j library
    implementation 'org.mnode.ical4j:ical4j:2.1.5', {
        exclude group: 'org.threeten', module: 'threetenbp'
    }
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'org.slf4j:slf4j-android:1.7.25'
    implementation 'org.slf4j:slf4j-api:1.7.25'

    //Tutorial
    implementation 'com.github.magneticflux-:Spotlight:1.3.2'

    //App settings
    implementation 'com.github.apl-devs:appintro:v4.2.3'

    //Serialization
    implementation 'com.esotericsoftware:kryo:4.0.1'
    implementation 'de.javakaffee:kryo-serializers:0.42'
    implementation 'org.objenesis:objenesis:2.6'

    //Pin button
    implementation 'com.github.varunest:sparkbutton:1.0.5'

    //News content parsing is in jsoup jar
    implementation 'org.jsoup:jsoup:1.11.2'

    //Fuzzy string contains - !!!GPL 3.0!!!
    implementation 'me.xdrop:fuzzywuzzy:1.1.9'

    //Alternative fuzzy string matching
    implementation 'org.apache.commons:commons-text:1.2'

    //Cool Particles
    implementation 'com.github.jinatonic.confetti:confetti:1.1.1'

    //Overrides Guava and Espresso's differing older versions
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    //java.time backport
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'

    //Job scheduling from Firebase
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

    //WebView alternative
    implementation 'com.github.rhlff:NestedScrollWebView:v1.0.2'

    //Webview alternative
    implementation 'com.thefinestartist:finestwebview:1.2.7'

    //Memory leak detection
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    //@Generated annotation, other annotations
    compileOnly 'javax.annotation:javax.annotation-api:1.3.1'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "android.arch.core:core-testing:$lifecycle_version"

    androidTestImplementation 'com.android.support.test:runner:1.0.2-alpha1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2-alpha1'
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "android.arch.persistence.room:testing:$room_version"
    androidTestImplementation 'com.natpryce:hamkrest:1.4.2.2'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}
//Must be at bottom
apply plugin: 'com.google.gms.google-services'
